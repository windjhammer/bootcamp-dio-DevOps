apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: web
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: web
    spec:
      containers:
      - image: nginx:latest
        name: nginx
        resources: {}
        volumeMounts:
        - mountPath: /data
          name: data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: nfs-data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-dados
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: nfs
  
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        image: andrepg1184/database-app2k8s:1.0
        args:
        - "--ignore-db-dir=lost+found"
        imagePullPolicy: Always
        name: mysql
        ports:
        - containerPort: 3306
          name: mysql

        volumeMounts:
        - name: mysql-dados
          mountPath: /var/lib/mysql/
      volumes:
      - name: mysql-dados
        persistentVolumeClaim: 
          claimName: mysql-dados

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: php
  labels:
    app: php
spec:
  replicas: 6
  selector:
    matchLabels:
      app: php
  template:
    metadata:
      labels:
        app: php
    spec:
      containers:
      - name: php
        image: dreno/database-app2k8s:1.0
        imagePullPolicy: Always
        ports:
        - containerPort: 80